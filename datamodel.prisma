type Product {
 id: ID! @id
 name: String!
 price: Int!
 status: ProductStatus @default(value: TO_REVIEW)
 orders: [Order!]
 submittedBy: User @relation(link: INLINE, onDelete: CASCADE, name: "Submitted")
 validatedBy: User @relation(link: INLINE, onDelete: CASCADE, name: "Validated")
 description: String!
 carts: [Cart!]
}

enum ProductStatus {
  VERIFIED
  TO_REVIEW
  DENIED
}

type Order {
 id: ID! @id
 price: Int!
 date: DateTime!
 status: OrderStatus! @default(value: ORDERED)
 associatedUser: User @relation(link: INLINE)
 products: [Product!] @relation(link: TABLE)
}

enum OrderStatus {
  DELIVERED
  ORDERED
  CANCELLED
}

type Cart {
  id: ID! @id
  price: Int!
  products: [Product!] @relation(link: TABLE)
  relatedUser: User
}

type Address {
 id: ID! @id
 city: String! @default(value: "")
 country: String! @default(value: "")
 postalCode: String! @default(value: "")
 state: String! @default(value: "")
 streetAddress: String! @default(value: "")
 additionalStreetAddress: String! @default(value: "")
 associatedUser: User
}

type User {
  id: ID! @id
  username: String!
  roles: Role! @default(value: ROLE_USER)
  password: String!
  email: String!
  address: Address @relation(link: INLINE)
  orders: [Order!]
  products: [Product!] @relation(name: "Submitted")
  validatedProducts: [Product!] @relation(name: "Validated")
  cart: Cart @relation(link: INLINE)
}

enum Role {
  ROLE_USER
  ROLE_SELLER
  ROLE_ADMIN
}
